{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"woody\"\n    },\n    content: \"첫번째 게시글\",\n    Images: [{\n      src: \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\"\n    }, {\n      src: \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\"\n    }, {\n      src: \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"얼른 사고 싶어요\"\n    }]\n  }],\n  ImagePaths: [],\n  postAdded: false\n}; // action.type\n\nvar ADD_POST = \"ADD_POST\"; // action creator\n\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: {\n    id: 1,\n    nickname: \"woody\"\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yesang-gi/Desktop/workspace/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","ImagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,SANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EACD;AAFJ,KADM,EAKN;AACEA,MAAAA,GAAG,EACD;AAFJ,KALM,EASN;AACEA,MAAAA,GAAG,EACD;AAFJ,KATM,CAPV;AAqBEC,IAAAA,QAAQ,EAAE,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAR;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAAD;AArBZ,GADS,CADe;AA0B1BI,EAAAA,UAAU,EAAE,EA1Bc;AA2B1BC,EAAAA,SAAS,EAAE;AA3Be,CAArB,C,CA8BP;;AACA,IAAMC,QAAQ,GAAG,UAAjB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,IAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,WAFO;AAGhBF,EAAAA,IAAI,EAAE;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,QAAQ,EAAE;AAAnB,GAHU;AAIhBE,EAAAA,MAAM,EAAE,EAJQ;AAKhBE,EAAAA,QAAQ,EAAE;AALM,CAAlB;;AAQA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,QAAL;AACE,6CACKK,KADL;AAEEf,QAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFX;AAGES,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOM,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"woody\",\n      },\n      content: \"첫번째 게시글\",\n      Images: [\n        {\n          src:\n            \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\",\n        },\n        {\n          src:\n            \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\",\n        },\n        {\n          src:\n            \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fd2v80xjmx68n4w.cloudfront.net%2Fgigs%2Fz7yn41576604482.jpg&imgrefurl=https%3A%2F%2Fkmong.com%2Fgig%2F19912&tbnid=ZNUUliHAqZn5GM&vet=10CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI..i&docid=ChU6LCiO0sfLcM&w=652&h=488&q=%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8&ved=0CGAQMyiSAWoXChMIkJ2e0qij7wIVAAAAAB0AAAAAEAI\",\n        },\n      ],\n      Comments: [{ User: { nickname: \"nero\" }, content: \"얼른 사고 싶어요\" }],\n    },\n  ],\n  ImagePaths: [],\n  postAdded: false,\n};\n\n// action.type\nconst ADD_POST = \"ADD_POST\";\n\n// action creator\nexport const addPost = {\n  type: ADD_POST,\n};\n\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: { id: 1, nickname: \"woody\" },\n  Images: [],\n  Comments: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}