{"ast":null,"code":"const initialState = {\n  user: {\n    isLoggedInf: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action creator\n\nconst login = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n}; // (이전상태, 액션) => 다음상태 를 만들어내는 함수\n\n\nconst rootReducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case \"LOG_IN\":\n      return {\n        uset: {}\n      };\n\n    default:\n      break;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/yesang-gi/Desktop/workspace/nodebird/front/reducers/index.js"],"names":["initialState","user","isLoggedInf","signUpData","loginData","post","mainPosts","login","data","type","rootReducer","state","action","console","log","uset"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,KADT;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB,C,CAYA;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,IAAnB;;AACA,UAAQG,MAAM,CAACH,IAAf;AACE,SAAK,QAAL;AACE,aAAO;AACLM,QAAAA,IAAI,EAAE;AADD,OAAP;;AAIF;AACE;AAPJ;AASD,CAXD;;AAaA,eAAeL,WAAf","sourcesContent":["const initialState = {\n  user: {\n    isLoggedInf: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\n//action creator\n\nconst login = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\n\n// (이전상태, 액션) => 다음상태 를 만들어내는 함수\nconst rootReducer = (state = initialState, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"LOG_IN\":\n      return {\n        uset: {},\n      };\n\n    default:\n      break;\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}